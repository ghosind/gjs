package syntax

var keywords map[string]TokenType = map[string]TokenType{
	"arguments":  TOKEN_ARGUMENTS,
	"as":         TOKEN_AS,
	"async":      TOKEN_ASYNC,
	"await":      TOKEN_AWAIT,
	"break":      TOKEN_BREAK,
	"case":       TOKEN_CASE,
	"catch":      TOKEN_CATCH,
	"class":      TOKEN_CLASS,
	"const":      TOKEN_CONST,
	"continue":   TOKEN_CONTINUE,
	"debugger":   TOKEN_DEBUGGER,
	"default":    TOKEN_DEFAULT,
	"delete":     TOKEN_DELETE,
	"do":         TOKEN_DO,
	"else":       TOKEN_ELSE,
	"enum":       TOKEN_ENUM,
	"eval":       TOKEN_EVAL,
	"export":     TOKEN_EXPORT,
	"extends":    TOKEN_EXTENDS,
	"false":      TOKEN_FALSE,
	"finally":    TOKEN_FINALLY,
	"for":        TOKEN_FOR,
	"from":       TOKEN_FROM,
	"function":   TOKEN_FUNCTION,
	"get":        TOKEN_GET,
	"if":         TOKEN_IF,
	"implements": TOKEN_IMPLEMENTS,
	"import":     TOKEN_IMPORT,
	"in":         TOKEN_IN,
	"instanceof": TOKEN_INSTANCEOF,
	"interface":  TOKEN_INTERFACE,
	"let":        TOKEN_LET,
	"meta":       TOKEN_META,
	"new":        TOKEN_NEW,
	"null":       TOKEN_NULL,
	"of":         TOKEN_OF,
	"package":    TOKEN_PACKAGE,
	"private":    TOKEN_PRIVATE,
	"protected":  TOKEN_PROTECTED,
	"public":     TOKEN_PUBLIC,
	"return":     TOKEN_RETURN,
	"set":        TOKEN_SET,
	"static":     TOKEN_STATIC,
	"super":      TOKEN_SUPER,
	"switch":     TOKEN_SWITCH,
	"target":     TOKEN_TARGET,
	"this":       TOKEN_THIS,
	"throw":      TOKEN_THROW,
	"true":       TOKEN_TRUE,
	"try":        TOKEN_TRY,
	"typeof":     TOKEN_TYPEOF,
	"undefined":  TOKEN_UNDEFINED,
	"var":        TOKEN_VAR,
	"void":       TOKEN_VOID,
	"while":      TOKEN_WHILE,
	"with":       TOKEN_WITH,
	"yield":      TOKEN_YIELD,
}
